{"ast":null,"code":"var _jsxFileName = \"/Users/mj/movie_jatin_landingpage/src/components/form.js\";\nimport React, { Component } from 'react';\n\nclass Form extends Component {\n  constructor() {\n    super();\n\n    this.getName = e => {\n      let username = e.target.value;\n      this.setState({\n        name: username\n      });\n      console.log(this.state.name);\n    };\n\n    this.getEmail = e => {\n      let userEmail = e.target.value; //the most important thing is that we use a RegEx\n      //in order to manage the input of the email\n      //at least we can get a some what valid email\n\n      if (userEmail.match(/^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/)) {\n        this.setState({\n          email: userEmail\n        });\n      } else {\n        this.setState({\n          email: \"\"\n        });\n        console.log(\"Incorrect Email, must match Expression\");\n      }\n\n      console.log(this.state.email);\n    };\n\n    this.getDescription = e => {\n      let userMessage = e.target.value;\n      this.setState({\n        message: userMessage\n      });\n      console.log(this.state.message);\n    };\n\n    this.submitForm = e => {\n      e.preventDefault();\n\n      if (this.state.name === \"\" || this.state.email === \"\" || this.state.message === \"\") {\n        this.setState({\n          formError: true\n        });\n        return false;\n      } else {\n        this.setState({\n          formError: false\n        });\n        console.log(\"UserData: {\\n            Username: \".concat(this.state.name, \",\\n            Email: \").concat(this.state.email, \",\\n            Message: \").concat(this.state.message, \"\\n        }\"));\n        console.log(\"form sent\");\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      formError: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.formError && React.createElement(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Fill all the input fields please.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"For any other inqueries fill out the following details\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Your name here please\",\n      onChange: this.getName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"We will contact you after reviewing your message\",\n      onChange: this.getEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"textarea\", {\n      onChange: this.getDescription,\n      maxLength: \"450\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"We will answer as soon as possible\"), React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"submit\",\n      value: \"Send\",\n      onClick: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/mj/movie_jatin_landingpage/src/components/form.js"],"names":["React","Component","Form","constructor","getName","e","username","target","value","setState","name","console","log","state","getEmail","userEmail","match","email","getDescription","userMessage","message","submitForm","preventDefault","formError","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass Form extends Component {\n  constructor(){\n      super();\n      this.state = {\n          name : \"\",\n          email : \"\",\n          message : \"\",\n          formError: false\n      }\n  }\n\n  getName = (e) =>{\n    let username = e.target.value; \n    this.setState({\n        name: username\n    });\n    console.log(this.state.name);\n  }\n  \n  \n  getEmail = (e) =>{\n    let userEmail = e.target.value; \n    //the most important thing is that we use a RegEx\n    //in order to manage the input of the email\n    //at least we can get a some what valid email\n    if(userEmail.match(/^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/)){\n      this.setState({\n        email: userEmail\n    });\n      }else{\n        this.setState({\n          email: \"\"\n      });\n      console.log(\"Incorrect Email, must match Expression\");\n    }\n  \n    console.log(this.state.email);\n  }\n\n  \n  getDescription = (e) =>{\n    let userMessage = e.target.value; \n    this.setState({\n        message: userMessage\n    });\n    console.log(this.state.message);\n  }\n  //send the form\n  submitForm = (e) =>{\n    e.preventDefault();\n\n    if(this.state.name === \"\" || this.state.email === \"\" || this.state.message === \"\" ){\n     this.setState({\n        formError: true\n     })\n       return false;\n    }else{\n        this.setState({\n            formError: false\n         })\n        console.log(`UserData: {\n            Username: ${this.state.name},\n            Email: ${this.state.email},\n            Message: ${this.state.message}\n        }`)\n    \n    \n        console.log(\"form sent\")\n    \n    }\n \n  }\n\n  render() {\n\n  \n\n    return (\n        <form>\n          {/* I am just sending a basic error message */}\n              {this.state.formError &&\n                <p className=\"error\">\n                    Fill all the input fields please.\n                </p>\n              }\n              <p>For any other inqueries fill out the following details</p>\n              <div>\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" name=\"name\" placeholder=\"Your name here please\" onChange={this.getName} />\n              </div>\n              <div>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" name=\"email\" placeholder=\"We will contact you after reviewing your message\" onChange={this.getEmail} />\n              </div>\n              <div>\n                <label htmlFor=\"name\">Message</label>\n                <textarea onChange={this.getDescription} maxLength=\"450\"></textarea>\n\n              </div>\n              <div>\n                <p>We will answer as soon as possible</p>\n                <input type=\"submit\" name=\"submit\" value=\"Send\" onClick= {this.submitForm} />\n\n              </div>\n              \n            </form>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}